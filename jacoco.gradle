apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.8.2"
}

android {
    buildTypes {
        debug {
            testCoverageEnabled true
        }
    }

    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }
}


// 先执行单元测试任务testDebugUnitTest和界面ui测试任务createDebugAndroidTestCoverageReport，然后在执行添加覆盖率报告任务
// 测试运行后，将生成代码覆盖率报告，并将其放置在构建目录中的目录中app/build/outputs/code-coverage/connected/
//这将是一个.ec文件，其中包含运行测试的设备的名称，并且将为运行测试的每个设备生成一个文件
task createTestReports(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugAndroidTestCoverageReport']) {
    group = "Reporting"
    //These are the different report file formats that we have enabled jacoco to create reports for
    reports {
        xml.enabled = true
        html.enabled = true
    }
    //This is a collection of files that we wish to exclude from our coverage reports. This is extremely useful for removing any classes generated by Dagger, as well as any Test and framework classes from the test coverage.
    def fileFilter = [
            '**/databinding/**/*.*',
            '**/android/databinding/*Binding.*',
            '**/BR.*',
            '**/R.*',
            '**/*$*.*',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*_MembersInjector.*',
            '**/Dagger*Component.*',
            '**/Dagger*Component$Builder.*',
            '**/*Module_*Factory.*',
            '**/*Fragment*.*',
            '**/*Activity*.*',
            '**/*Adapter*.*',
            '**/*ViewPager*.*',
            '**/*ViewHolder*.*',
            '**/*Module*.*'
    ]

    //This is a variable for the location of our projects main directory
    //这是项目主目录位置的变量
    def mainSrc = "${project.projectDir}/src/main/java"
    // Used by jacoco to collect java files for analysis, here we’re giving it the path stored in our mainSrc declaration
    //由jacoco用来收集Java文件进行分析，在这里，我们为它提供了存储在mainSrc声明中的路径
    sourceDirectories.setFrom(files([mainSrc]))

    //This is a variable for the location of the .class files for your project
    //这是项目中.class文件位置的变量
    def javaClasses = fileTree(dir: "$project.buildDir/intermediates/javac/debug/classes", excludes: fileFilter)
    //if you have kotlin
    //def kotlinClasses = fileTree(dir: "$project.buildDir/tmp/kotlin-classes/debug/", excludes: fileFilter)
    //Used by jacoco to collect class files for analysis, here we’re giving it the path stored in our debugTree declaration
    //由jacoco用来收集类文件以进行分析，在这里，我们给它存储在javaClasses声明中的路径
    classDirectories.setFrom(files([javaClasses]))
    //Used by jacoco to save the results of the report generation, this must have the .exec extension but you can decide the path
    //由jacoco用于保存报告生成的结果，该扩展名必须具有.exec扩展名，但是您可以确定路径

    executionData.setFrom(fileTree(dir: project.buildDir, includes: [
            'jacoco/testDebugUnitTest.exec', 'outputs/code_coverage/debugAndroidTest/connected/*coverage.ec'
    ]))
}
